{"ast":null,"code":"var _jsxFileName = \"/Users/rahoolio/Github/CS157AEComm/src/components/Notifications.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Notifications({\n  loggedInUserId\n}) {\n  _s();\n  const [notifications, setNotifications] = useState([]);\n  useEffect(() => {\n    if (loggedInUserId) {\n      // console.log('Logged in User ID:', loggedInUserId); // Verify that user ID is available\n      fetch(`http://localhost:5001/notifications/${loggedInUserId}`).then(res => res.json()).then(data => {\n        console.log('Notifications fetched:', data);\n        setNotifications(data);\n      }).catch(err => {\n        console.error('Error fetching notifications:', err);\n      });\n    } else {\n      console.log('No loggedInUserId found');\n    }\n  }, [loggedInUserId]);\n  const handleMarkAsRead = notificationId => {\n    console.log(`Marking notification ${notificationId} as read`);\n    fetch(`http://localhost:5001/notifications/${notificationId}/mark-read`, {\n      method: 'PUT'\n    }).then(res => res.json()).then(data => {\n      console.log(data.message);\n      // Update the state to reflect the read status\n      setNotifications(prevNotifications => prevNotifications.map(notification => notification.notification_id === notificationId ? {\n        ...notification,\n        status: 'Read'\n      } : notification));\n    }).catch(err => {\n      console.error('Error updating notification status:', err);\n    });\n  };\n  const unreadNotifications = notifications.filter(notification => notification.status !== 'Read');\n  const readNotifications = notifications.filter(notification => notification.status === 'Read');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.notificationsContainer,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      style: styles.notificationsTitle,\n      children: \"Your Notifications\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), unreadNotifications.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      style: styles.notificationsList,\n      children: unreadNotifications.map(notification => /*#__PURE__*/_jsxDEV(\"li\", {\n        style: styles.notificationItem,\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          style: styles.notificationMessage,\n          children: notification.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'space-between',\n            marginTop: '10px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            style: styles.notificationDate,\n            children: new Date(notification.notification_Date).toLocaleString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            style: styles.readButton,\n            onClick: () => handleMarkAsRead(notification.notification_id),\n            children: \"Mark as Read\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 29\n        }, this)]\n      }, notification.notification_id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No unread notifications at this time.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }, this), readNotifications.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        style: {\n          marginTop: '30px',\n          fontSize: '20px',\n          fontWeight: 'bold'\n        },\n        children: \"Read Notifications\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        style: styles.notificationsList,\n        children: readNotifications.map(notification => /*#__PURE__*/_jsxDEV(\"li\", {\n          style: styles.notificationItem,\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            style: styles.notificationMessage,\n            children: notification.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            style: styles.notificationDate,\n            children: new Date(notification.notification_Date).toLocaleString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 33\n          }, this)]\n        }, notification.notification_id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n}\n_s(Notifications, \"6gMUc0OfbF4zJu51/S5RmKCczuA=\");\n_c = Notifications;\nconst styles = {\n  notificationsContainer: {\n    padding: '20px',\n    fontFamily: 'Arial, sans-serif'\n  },\n  notificationsTitle: {\n    textAlign: 'left',\n    marginBottom: '20px',\n    fontSize: '24px',\n    fontWeight: 'bold'\n  },\n  notificationsList: {\n    listStyle: 'none',\n    padding: '0'\n  },\n  notificationItem: {\n    border: '1px solid #ccc',\n    borderRadius: '5px',\n    padding: '15px',\n    marginBottom: '15px',\n    boxShadow: '0px 0px 10px rgba(0, 0, 0, 0.1)'\n  },\n  notificationMessage: {\n    fontSize: '16px',\n    margin: '0'\n  },\n  notificationDate: {\n    fontSize: '14px',\n    color: '#666',\n    marginTop: '10px'\n  },\n  readButton: {\n    padding: '5px 10px',\n    backgroundColor: '#28a745',\n    color: 'white',\n    border: 'none',\n    borderRadius: '5px',\n    cursor: 'pointer',\n    fontSize: '14px'\n  }\n};\nexport default Notifications;\nvar _c;\n$RefreshReg$(_c, \"Notifications\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","Notifications","loggedInUserId","_s","notifications","setNotifications","fetch","then","res","json","data","console","log","catch","err","error","handleMarkAsRead","notificationId","method","message","prevNotifications","map","notification","notification_id","status","unreadNotifications","filter","readNotifications","style","styles","notificationsContainer","children","notificationsTitle","fileName","_jsxFileName","lineNumber","columnNumber","length","notificationsList","notificationItem","notificationMessage","display","alignItems","justifyContent","marginTop","notificationDate","Date","notification_Date","toLocaleString","readButton","onClick","fontSize","fontWeight","_c","padding","fontFamily","textAlign","marginBottom","listStyle","border","borderRadius","boxShadow","margin","color","backgroundColor","cursor","$RefreshReg$"],"sources":["/Users/rahoolio/Github/CS157AEComm/src/components/Notifications.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nfunction Notifications({ loggedInUserId }) {\n    const [notifications, setNotifications] = useState([]);\n\n    useEffect(() => {\n        if (loggedInUserId) {\n            // console.log('Logged in User ID:', loggedInUserId); // Verify that user ID is available\n            fetch(`http://localhost:5001/notifications/${loggedInUserId}`)\n                .then(res => res.json())\n                .then(data => {\n                    console.log('Notifications fetched:', data);\n                    setNotifications(data);\n                })\n                .catch(err => {\n                    console.error('Error fetching notifications:', err);\n                });\n        } else {\n            console.log('No loggedInUserId found');\n        }\n    }, [loggedInUserId]);\n\t\n\tconst handleMarkAsRead = (notificationId) => {\n        console.log(`Marking notification ${notificationId} as read`);\n        fetch(`http://localhost:5001/notifications/${notificationId}/mark-read`, {\n            method: 'PUT',\n        })\n            .then(res => res.json())\n            .then(data => {\n                console.log(data.message);\n                // Update the state to reflect the read status\n                setNotifications(prevNotifications =>\n                    prevNotifications.map(notification =>\n                        notification.notification_id === notificationId\n                            ? { ...notification, status: 'Read' }\n                            : notification\n                    )\n                );\n            })\n            .catch(err => {\n                console.error('Error updating notification status:', err);\n            });\n\t};\n\t\n\tconst unreadNotifications = notifications.filter(notification => notification.status !== 'Read');\n    const readNotifications = notifications.filter(notification => notification.status === 'Read');\n\t\n    return (\n        <div style={styles.notificationsContainer}>\n            <h2 style={styles.notificationsTitle}>Your Notifications</h2>\n            {unreadNotifications.length > 0 ? (\n                <ul style={styles.notificationsList}>\n                    {unreadNotifications.map(notification => (\n                        <li key={notification.notification_id} style={styles.notificationItem}>\n                            <p style={styles.notificationMessage}>{notification.message}</p>\n                            <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between', marginTop: '10px' }}>\n                                <p style={styles.notificationDate}>{new Date(notification.notification_Date).toLocaleString()}</p>\n                                <button \n                                    style={styles.readButton} \n                                    onClick={() => handleMarkAsRead(notification.notification_id)}\n                                >\n                                    Mark as Read\n                                </button>\n                            </div>\n                        </li>\n                    ))}\n                </ul>\n            ) : (\n                <p>No unread notifications at this time.</p>\n            )}\n            {readNotifications.length > 0 && (\n                <>\n                    <h3 style={{ marginTop: '30px', fontSize: '20px', fontWeight: 'bold' }}>Read Notifications</h3>\n                    <ul style={styles.notificationsList}>\n                        {readNotifications.map(notification => (\n                            <li key={notification.notification_id} style={styles.notificationItem}>\n                                <p style={styles.notificationMessage}>{notification.message}</p>\n                                <p style={styles.notificationDate}>{new Date(notification.notification_Date).toLocaleString()}</p>\n                            </li>\n                        ))}\n                    </ul>\n                </>\n            )}\n        </div>\n    );\n}\n\nconst styles = {\n    notificationsContainer: {\n        padding: '20px',\n        fontFamily: 'Arial, sans-serif',\n    },\n    notificationsTitle: {\n        textAlign: 'left',\n        marginBottom: '20px',\n        fontSize: '24px',\n        fontWeight: 'bold',\n    },\n    notificationsList: {\n        listStyle: 'none',\n        padding: '0',\n    },\n    notificationItem: {\n        border: '1px solid #ccc',\n        borderRadius: '5px',\n        padding: '15px',\n        marginBottom: '15px',\n        boxShadow: '0px 0px 10px rgba(0, 0, 0, 0.1)',\n    },\n    notificationMessage: {\n        fontSize: '16px',\n        margin: '0',\n    },\n    notificationDate: {\n        fontSize: '14px',\n        color: '#666',\n        marginTop: '10px',\n    },\n\treadButton: {\n        padding: '5px 10px',\n        backgroundColor: '#28a745',\n        color: 'white',\n        border: 'none',\n        borderRadius: '5px',\n        cursor: 'pointer',\n        fontSize: '14px',\n    },\n};\n\nexport default Notifications;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}